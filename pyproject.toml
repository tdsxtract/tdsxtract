[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tdsxtract"
version = "0.3.0"
description = "Tools for extracting permittivity values from Terahertz Time Domain Spectroscopy measurements."
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = ["physics"]
authors = [{ email = "benjamin.vial84@gmail.com" }, { name = "Benjamin Vial" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Utilities",
]
dependencies = [
  "importlib_metadata; python_version<'3.8'",
  "numpy>=1.20.0",
  "scipy >= 1.10.0",
  "matplotlib >= 3.7.0",
  "jaxlib",
  "jax",
]

[tool.setuptools]
packages = ["tdsxtract"]

[project.urls]
homepage = "https://tdsxtract.github.io"
code = "https://github.com/tdsxtract/tdsxtract"
issues = "https://github.com/tdsxtract/tdsxtract/issues"

[project.optional-dependencies]
dev = [
  "pip",
  "setuptools",
  "wheel",
  "flake8",
  "pytest",
  "pytest-cov",
  "coverage",
  "black",
  "twine",
  "isort",
  "radon",
  "pydocstyle",
  "pylint",
  "bump-my-version",
]

[tool.isort]
profile = "black"

[tool.setuptools.dynamic]
version = { attr = "tdsxtract.__version__" }

[tool.bumpversion]
current_version = "0.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "--no-verify"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
